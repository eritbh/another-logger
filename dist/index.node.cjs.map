{"version":3,"file":"index.node.cjs","sources":["../src/index.node.ts"],"sourcesContent":["export * from './index.browser';\n\nimport { createLogger } from './Logger';\nimport { createNodeConsoleTransport } from './transports/nodeConsoleTransport';\n\n/**\n * A transport that sends messages to the Node.js console, with level styles set\n * for six levels: \"debug\", \"info\", \"success\", \"warn\", \"error\", and \"fatal\".\n */\nexport const nodeConsole = createNodeConsoleTransport({\n\tlevelStyles: {\n\t\tdebug: 'cyan',\n\t\tinfo: 'blue',\n\t\tsuccess: 'green',\n\t\twarn: 'yellow',\n\t\terror: 'red',\n\t\tfatal: 'magenta',\n\t},\n})\n\n/**\n * An appropriate console transport for the current platform. When running in\n * Node, it will be nodeConsole; when running in a browser, it will be\n * browserConsole. In either case, level styles/colors will be set for six\n * levels: \"debug\", \"info\", \"success\", \"warn\", \"error\", and \"fatal\".\n */\nexport const platformConsole = nodeConsole;\n\n/**\n * A default logger with six levels (\"debug\", \"info\", \"success\", \"warn\",\n * \"error\", and \"fatal\") and a single transport that logs messages to the\n * console.\n */\nexport const defaultLogger = createLogger({\n\tdebug: platformConsole,\n\tinfo: platformConsole,\n\tsuccess: platformConsole,\n\twarn: platformConsole,\n\terror: platformConsole,\n\tfatal: platformConsole,\n});\n"],"names":["createNodeConsoleTransport","createLogger"],"mappings":";;;;;;;;;AAKA;;;;MAIa,WAAW,GAAGA,+CAA0B,CAAC;IACrD,WAAW,EAAE;QACZ,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,OAAO;QAChB,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,SAAS;KAChB;CACD,EAAC;AAEF;;;;;;MAMa,eAAe,GAAG,YAAY;AAE3C;;;;;MAKa,aAAa,GAAGC,mBAAY,CAAC;IACzC,KAAK,EAAE,eAAe;IACtB,IAAI,EAAE,eAAe;IACrB,OAAO,EAAE,eAAe;IACxB,IAAI,EAAE,eAAe;IACrB,KAAK,EAAE,eAAe;IACtB,KAAK,EAAE,eAAe;CACtB;;;;;;;;;"}