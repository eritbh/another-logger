{"version":3,"file":"util.mjs","sources":["../src/util.ts"],"sourcesContent":["/** Whether we're running under Node.js. If not, we're running in a browser. */\nexport const isNode = globalThis.process?.versions?.node != null;\n\n/** Any falsy value, other than NaN (which doesn't have a type literal). */\nexport type Falsy = false | 0 | '' | null | undefined;\n\n/** A single value or an array of values of a given type. */\nexport type MaybeArray<T> = T | T[];\n\n/** If the input value is not an array, converts it to an array. */\nexport function makeArray<T> (val: MaybeArray<T>): T[] {\n\tif (!Array.isArray(val)) {\n\t\treturn [val];\n\t}\n\treturn val;\n}\n"],"names":[],"mappings":"AAAA;AACsB,UAAU,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,IAAI,KAAK;AAQjE;SACgB,SAAS,CAAK,GAAkB;IAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC;KACb;IACD,OAAO,GAAG,CAAC;AACZ;;;;"}